{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"7fb64024-c360-5bb8-bc2d-7871948df033","excerpt":"DoririThank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"doriri\"><a href=\"#doriri\" aria-label=\"doriri permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Doriri</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}},{"node":{"id":"515b1ca3-d292-5074-a2c2-8dbb7cc6cd0b","excerpt":"1.+-----+\n|12345|\n+-----+function pad(n, width) {\nn = n + ”;\nreturn n.length >= width ? n : new Array(width - n.length + 1).join(’ ’) + n;\n}\nconst paintBorder…","html":"<p>1.</p>\n<div id=\"brinza-task-description\">\n<p>You have an array of numbers and you would like to print these numbers in a tabular format to make them look more organized. Each cell of the table contains exactly one number and is surrounded by exactly four edges:</p>\n<tt style=\"white-space:pre-wrap\">+-+\n|4|\n+-+\n<p>+-----+\n|12345|\n+-----+</tt></p>\n<p>As you can see above, each corner of the cell is represented by a \"<tt style=\"white-space:pre-wrap\">+</tt>\" sign, vertical edges by \"<tt style=\"white-space:pre-wrap\">-</tt>\" signs and horizontal edges by \"<tt style=\"white-space:pre-wrap\">|</tt>\" signs. The width of the cell adjusts to accommodate the number of digits of the number written within it. There can be many cells in a row. Adjacent cells share an edge:</p>\n<tt style=\"white-space:pre-wrap\">+---+---+---+---+\n|  4| 35| 80|123|\n+---+---+---+---+</tt>\n<p>Note that each cell has the same width. The width of the cell adjusts to match the width of the longest number in the table. The numbers in cells are aligned to the right, with any unused area in each cell filled with spaces.</p>\n<p>The table can consist of many rows, and adjacent rows share an edge:</p>\n<tt style=\"white-space:pre-wrap\">+-----+-----+-----+-----+\n|    4|   35|   80|  123|\n+-----+-----+-----+-----+\n|12345|   44|    8|    5|\n+-----+-----+-----+-----+\n|   24|    3|   22|   35|\n+-----+-----+-----+-----+</tt>\n<p>Your goal is to output a table containing all the numbers from a given array such that each row contains exactly K numbers. The last row can contain fewer numbers.</p>\n<p>Write a function:</p>\n<blockquote><p style=\"font-family: monospace; font-size: 9pt; display: block; white-space: pre-wrap\"><tt>function solution(A, K);</tt></p></blockquote>\n<p>that, given a non-empty array A consisting of N integers and an integer K, prints a string representing the formatted array. The numbers in the table should appear in the same order as the numbers in the array.</p>\n<p>For example, given array A = [4, 35, 80, 123, 12345, 44, 8, 5] and K = 10, the resultant table will contain exactly one row, as shown below:</p>\n<tt style=\"white-space:pre-wrap\">+-----+-----+-----+-----+-----+-----+-----+-----+\n|    4|   35|   80|  123|12345|   44|    8|    5|\n+-----+-----+-----+-----+-----+-----+-----+-----+</tt>\n<p>For A = [4, 35, 80, 123, 12345, 44, 8, 5, 24, 3], K = 4, the table would appear as follows:</p>\n<tt style=\"white-space:pre-wrap\">+-----+-----+-----+-----+\n|    4|   35|   80|  123|\n+-----+-----+-----+-----+\n|12345|   44|    8|    5|\n+-----+-----+-----+-----+\n|   24|    3|\n+-----+-----+</tt>\n<p>Given A = [4, 35, 80, 123, 12345, 44, 8, 5, 24, 3, 22, 35] and K = 4, the table would appear as follows:</p>\n<tt style=\"white-space:pre-wrap\">+-----+-----+-----+-----+\n|    4|   35|   80|  123|\n+-----+-----+-----+-----+\n|12345|   44|    8|    5|\n+-----+-----+-----+-----+\n|   24|    3|   22|   35|\n+-----+-----+-----+-----+</tt>\n<p>The function shouldn't return any value.</p>\n<p>You can print a string to the output (without or with the end-of-line character) as follows:</p>\n<blockquote><p style=\"font-family: monospace; font-size: 9pt; display: block; white-space: pre-wrap\"><tt>process.stdout.write('sample string');\nprocess.stdout.write('whole line\\n');</tt></p></blockquote>\n<p>Assume that:</p>\n<blockquote><ul style=\"margin: 10px;padding: 0px;\"><li>N is an integer within the range [<span class=\"number\">1</span>..<span class=\"number\">200</span>];</li>\n<li>K is an integer within the range [<span class=\"number\">1</span>..<span class=\"number\">1,000,000,000</span>];</li>\n<li>each element of array A is an integer within the range [<span class=\"number\">0</span>..<span class=\"number\">1,000,000,000</span>].</li>\n</ul>\n</blockquote><p>In your solution, focus on <b><b>correctness</b></b>. The performance of your solution will not be the focus of the assessment.</p>\n</div>\n<p>function pad(n, width) {\nn = n + ”;\nreturn n.length >= width ? n : new Array(width - n.length + 1).join(’ ’) + n;\n}\nconst paintBorder = (repeatCount, borderLength) => {\nlet border = ’+’;\nfor(let i = 0; i &#x3C; borderLength; i++) {\nborder += <code class=\"language-text\">${&#39;-&#39;.repeat(repeatCount)}+</code>;\n}\nreturn <code class=\"language-text\">${border}\\n</code>;\n}\nfunction solution(A, K) {\nconst repeatCount = Math.max.apply(null,A).toString().length;\nlet count = 0;\nlet answer = paintBorder(repeatCount, A.length > K ? K : A.length);\nfor(let i = 0; i &#x3C; A.length; i++) {\nif(i &#x26;&#x26; i % K === 0) {\nanswer += <code class=\"language-text\">|\\n${paintBorder(repeatCount, count)}</code>;\ncount = 0;\n}\nanswer += <code class=\"language-text\">|${pad(A[i] ? A[i] : &#39;&#39;, repeatCount)}</code>;\ncount++;\n}\nanswer += <code class=\"language-text\">|\\n${paintBorder(repeatCount, count)}</code>;\nconsole.log(answer.trim());\n}</p>\n<p>solution([4, 35, 80, 123, 12345, 44, 8, 5], 10);\nsolution([4, 35, 80, 123, 12345, 44, 8, 5, 24, 3], 4);\nsolution([4, 35, 80, 123, 12345, 44, 8, 5, 24, 3, 22, 35], 4)</p>","frontmatter":{"title":"","date":null,"lang":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}