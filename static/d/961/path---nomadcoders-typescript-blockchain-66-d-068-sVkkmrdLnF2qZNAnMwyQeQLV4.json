{"data":{"site":{"siteMetadata":{"title":"Doriri.io","author":"Doriri","siteUrl":"https://minhyeong-jang.github.io/doriri","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"doriri"}}},"markdownRemark":{"id":"bcaf7d2a-78c8-5614-bd5d-f33abe052371","excerpt":"Github : typechainLecture : nomadcoders1. Typescript?Typescript는 프로그래밍 언어로 Javascript + Type의 합성어이다. 컴파일 시 Javascript로 변환된다.Javascript가 유명한 건 엄격한 규칙이 없기 때문에 사용하기 쉽고, 우리가 원하는 방향으로 수정하기도 쉽다.\n하지만 큰 프로젝트에서 일을 하거나 버그를 최소화하고 싶다면 위의 장점이 단점이 된다.\nTypescript…","html":"<blockquote>\n<p>Github : <a href=\"https://github.com/minhyeong-jang/typechain/\">typechain</a><br>\nLecture : <a href=\"https://academy.nomadcoders.co/p/build-a-blockchain-with-typescript?ref=map\">nomadcoders</a></p>\n</blockquote>\n<h2 id=\"1-typescript\"><a href=\"#1-typescript\" aria-label=\"1 typescript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Typescript?</h2>\n<p>Typescript는 프로그래밍 언어로 Javascript + Type의 합성어이다. 컴파일 시 Javascript로 변환된다.<br>\nJavascript가 유명한 건 엄격한 규칙이 없기 때문에 사용하기 쉽고, 우리가 원하는 방향으로 수정하기도 쉽다.\n하지만 큰 프로젝트에서 일을 하거나 버그를 최소화하고 싶다면 위의 장점이 단점이 된다.\nTypescript로 작성하면 기능 예측이 가능하며, 코드를 읽기 쉬워지게 된다.</p>\n<h3 id=\"11-설치\"><a href=\"#11-%EC%84%A4%EC%B9%98\" aria-label=\"11 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> typescript\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> tsc-watch --dev\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> crypto-js</code></pre></div>\n<p>참고 : <code class=\"language-text\">yarn global add typescript</code> 로 설치하는 경우, tsc-watch가 인식하지 못하는 오류가 있습니다.</p>\n<h3 id=\"12-설정\"><a href=\"#12-%EC%84%A4%EC%A0%95\" aria-label=\"12 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 설정</h3>\n<p><strong>tsconfig.json</strong><br>\nTypescript => Javascript 변환할 떄 반영하는 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;compilerOptions&quot;: {\n    &quot;module&quot;: &quot;commonjs&quot;,\n    &quot;target&quot;: &quot;ES2015&quot;,\n    &quot;sourceMap&quot;: true,\n    &quot;outDir&quot;: &quot;dist&quot;\n  },\n\n}</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">&quot;module&quot;: &quot;commonjs&quot;</code> node.js 평범하게 import, export 한다.<br>\n<code class=\"language-text\">&quot;target&quot;: &quot;ES2015&quot;</code> ES5 버전으로 컴파일 한다.<br>\n<code class=\"language-text\">&quot;sourceMap&quot;: true</code> Sourcemap을 설정한다. ( Sourcemap 이란? )<br>\n<code class=\"language-text\">&quot;outDir&quot;: &quot;dist&quot;</code> dist 파일로 컴파일된 파일을 출력한다.\n<code class=\"language-text\">&quot;include&quot;: [&quot;src/**/*&quot;]</code> 컴파일 과정에서 포함할 파일 ( src 폴더 내 전체 파일 )\n<code class=\"language-text\">&quot;excude&quot;: [&quot;node_modules&quot;]</code> 컴파일 과정에서 미포함 파일</p>\n</blockquote>\n<p><strong>tsc-watch</strong><br>\n소스코드 수정 시 자동으로 컴파일을 진행한다.</p>\n<p>기존 스크립트 : yarn start 시 컴파일 및 index.js를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prestart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>tsc watch 스크립트 : tsc-watch가 소스코드 변경사항을 확인하여 컴파일, 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc-watch --onSuccess \\\" node dist/index.js\\\" \"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"13-타입-체크\"><a href=\"#13-%ED%83%80%EC%9E%85-%EC%B2%B4%ED%81%AC\" aria-label=\"13 타입 체크 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3 타입 체크</h3>\n<p><strong>단순 함수</strong><br>\nname, gender은 문자열, age는 숫자이다. 함수의 return 타입은 string 이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> sayHi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>gender<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Minhyeong'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Interface</strong><br>\n오브젝트에 대한 타입을 선언 후 함수에서 인자 값 타입을 Interface Human으로 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n  age<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">;</span>\n  gender<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> sayHi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">:</span> Human<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n    person<span class=\"token punctuation\">.</span>gender\n  <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Minhyeong'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span>\n  gender<span class=\"token punctuation\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Class</strong><br>\nHuman 클래스를 선언하여 타입을 체크하고 객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> age<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> gender<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> min<span class=\"token punctuation\">:</span> Human <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Human</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Minhyeong\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sayHi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">:</span> Human<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, you are a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n    person<span class=\"token punctuation\">.</span>gender\n  <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"14-완성-작품\"><a href=\"#14-%EC%99%84%EC%84%B1-%EC%9E%91%ED%92%88\" aria-label=\"14 완성 작품 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4 완성 작품</h3>\n<p><a href=\"https://github.com/minhyeong-jang/typechain/blob/master/src/index.ts\">Github / index.ts</a></p>\n<h2 id=\"2-후기\"><a href=\"#2-%ED%9B%84%EA%B8%B0\" aria-label=\"2 후기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 후기</h2>\n<p><strong>학습 기간 : 19/05/23 ~ 19/05/24</strong></p>\n<p>Typescript를 기초도 모르는 상태로 개발할 때 “아 이러한 상황에선 이렇게 하면 되는구나”라는 식으로 진행했었다. 강의를 들어보니 내가 놓치고 지나간 부분들이 많다는 것을 알고 새롭게 배웠다. ( 블록체인의 구조도 배운 건 일석이조였다. )</p>","frontmatter":{"title":"Typescript로 Blockchain 만들기","date":"May 24, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/nomadcoders/typescript-blockchain/","previous":{"fields":{"slug":"/nomadcoders/instagram-clone-coding/"},"frontmatter":{"title":"instagram clone coding","category":"nomadcoders"}},"next":{"fields":{"slug":"/nomadcoders/nomadcoders-lecture/"},"frontmatter":{"title":"nomadcoders 강의 정리","category":"nomadcoders"}}}}